C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2024 10:58:55 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil_c51v956\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Device;.\System) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "System.h"
   2          u8 Display = 0;
   3          u8 Maxtem = 35;
   4          u8 Mintem = 25;   
   5          u8 tem_mod;
   6          u16 led_tem= 0;
   7          sbit Relay = P0^4; sbit Buzzer = P0^6;
   8          bit led_flag = 0;
   9          void Timer2_Init(void)          //1毫秒@12.000MHz
  10          {
  11   1              AUXR |= 0x04;                   //定时器时钟1T模式
  12   1              T2L = 0x20;                             //设置定时初始值
  13   1              T2H = 0xD1;                             //设置定时初始值
  14   1              AUXR |= 0x10;                   //定时器2开始计时
  15   1      
  16   1          IE2 |= 0X04;
  17   1              EA = 1;
  18   1      }
  19          
  20          //键盘读取
  21          u8 key_value;
  22          u16 kbd_time;
  23          u8 temperature;
  24          u8 key_count = 0;
  25          u8 a;
  26          u8 set_temp[8];
  27          void KBD_Process(){
  28   1              temperature = Read_Temperature();
  29   1              
  30   1              if(kbd_time >= 10){
  31   2                      a = KBD_Read_State();
  32   2                      //处于三个状态下
  33   2                      if(temperature < Mintem) {
  34   3                              tem_mod =0;
  35   3                              P2 = 0xa0;Relay=0;Buzzer=0;P2 = 0x00;      
  36   3                              if(led_tem >= 800){
  37   4                                      led_flag =~ led_flag;
  38   4                                      if(led_flag == 1){P2 = 0x80;P0=~0x01;P2 = 0;}
  39   4                                      if(led_flag == 0){P2 = 0x80;P0=0xff;P2 = 0;}
  40   4                                      led_tem =0;
  41   4                              }
  42   3                      }
  43   2                      else if(Mintem < temperature < Maxtem){
  44   3                              tem_mod=1;
  45   3                              P2 = 0xa0;Relay=0;Buzzer=0;P2 = 0x00;
  46   3                              if(led_tem >= 400){
  47   4                                      led_flag =~ led_flag;
  48   4                                      if(led_flag == 1){P2 = 0x80;P0=~0x01;P2 = 0;}
  49   4                                      if(led_flag == 0){P2 = 0x80;P0=0xff;P2 = 0;}
  50   4                                      led_tem =0;
  51   4                      }
  52   3                      }
  53   2                      else if(Maxtem < temperature){
  54   3                              tem_mod =2;
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2024 10:58:55 PAGE 2   

  55   3                              P2 = 0xa0;Relay=1;Buzzer=0;P2 = 0x00;
  56   3                              if(led_tem >= 200){
  57   4                                      led_flag =~ led_flag;
  58   4                                      if(led_flag == 1){P2 = 0x80;P0=~0x01;P2 = 0;}
  59   4                                      if(led_flag == 0){P2 = 0x80;P0=0xff;P2 = 0;}
  60   4                                      led_tem =0;
  61   4                      }
  62   3                      }
  63   2                      if(Display == 0){
  64   3                                      //u8 smg_buf[8] = {0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f};
  65   3                                      smg_buf[0]=0x40;
  66   3                                      smg_buf[1]=smg_code[tem_mod];
  67   3                                      smg_buf[2]=smg_code[Maxtem/10];     //0x40;
  68   3                                      smg_buf[3]=smg_code[Maxtem%10];    //0x00;      
  69   3                                      smg_buf[4]=smg_code[Mintem/10];
  70   3                                      smg_buf[5]=smg_code[Mintem%10]; 
  71   3                                      smg_buf[6]=smg_code[temperature/10];      
  72   3                                      smg_buf[7]=smg_code[temperature%10];    
  73   3                                      if(a == 8)Display =! Display;                           
  74   3                                      }
  75   2                      else{      
  76   3                                         if(key_count == 2)key_count =5;
  77   3                                         if(key_count == 7)key_count =0;
  78   3                                         //u8 smg_buf[8] = {0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f};
  79   3                                        set_buf[0] = 0x40;
  80   3                                        set_buf[3] = smg_code[key_count];
  81   3                                        set_buf[4] = 0x00;
  82   3                                        set_buf[5] =  0x40;   
  83   3                                              switch(a){                                                                               //设置模式
  84   4                                              case 4: key_count++;set_buf[key_count]=smg_code[9];set_temp[key_count]=9;break;
  85   4                                              case 5: key_count++;set_buf[key_count]=smg_code[6];set_temp[key_count]=6;break;
  86   4                                              case 6: key_count++;set_buf[key_count]=smg_code[3];set_temp[key_count]=3;break;
  87   4                                              case 7: key_count++;set_buf[key_count]=smg_code[0];set_temp[key_count]=0;break;
  88   4                                              case 8: Display =! Display;
  89   4                                                                       Maxtem = set_temp[1]*10 + set_temp[2];
  90   4                                                                       Mintem = set_temp[6]*10 + set_temp[7];
  91   4                                                                      if(Maxtem<Mintem ){
  92   5                                                                              DeviceCtrl(0x80,0xfd);
  93   5                                                                      }else{
  94   5                                                                              DeviceCtrl(0x80,0xff);
  95   5                                                                      }
  96   4                                                                      break;
  97   4                                              case 9: key_count++;set_buf[key_count]=smg_code[7];set_temp[key_count]=7;break;
  98   4                                              case 10: key_count++;set_buf[key_count]=smg_code[4];set_temp[key_count]=4;break;
  99   4                                              case 11: key_count++;set_buf[key_count]=smg_code[1];set_temp[key_count]=1;break;
 100   4                                              case 12: {set_buf[1] = smg_code[1];set_buf[2] = smg_code[1];set_buf[6] = smg_code[1];set_buf[7] = smg
             -_code[1];break;}
 101   4                                              case 13: key_count++;set_buf[key_count]=smg_code[8];set_temp[key_count]=8;break;
 102   4                                              case 14:key_count++;set_buf[key_count]=smg_code[5];set_temp[key_count]=5;break;
 103   4                                              case 15: key_count++;set_buf[key_count]=smg_code[2];set_temp[key_count]=2;break;
 104   4                                                      }
 105   3                                      }
 106   2      kbd_time = 0;
 107   2      }
 108   1      
 109   1      }
 110          
 111          
 112          int main(){     
 113   1              Timer2_Init();
 114   1              
 115   1              while(1){
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2024 10:58:55 PAGE 3   

 116   2      
 117   2              KBD_Process();
 118   2      
 119   2      }
 120   1      
 121   1      }
 122          void Timer2_ISR()interrupt 12{
 123   1              SMG_Display(Display);
 124   1              kbd_time++;
 125   1              led_tem++;
 126   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    803    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

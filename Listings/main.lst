C51 COMPILER V9.56.0.0   MAIN                                                              07/28/2024 11:33:21 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil_c51v956\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Device;.\System) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "System.h"
   2          u8 temperature;
   3          u8 Mode = 1;
   4          u16 WorkTime = 0;
   5          u16 Surplus_Work_Time;
   6          bit Display;
   7          u16 temperature_time;
   8          void Timer2_Init(void)          //100Î¢Ãë@12.000MHz
   9          {
  10   1              AUXR &= 0xFB;                   //¶¨Ê±Æ÷Ê±ÖÓ12TÄ£Ê½
  11   1              T2L = 0x9C;                             //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
  12   1              T2H = 0xFF;                             //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
  13   1              AUXR |= 0x10;                   //¶¨Ê±Æ÷2¿ªÊ¼¼ÆÊ±
  14   1              IE2 = 0x04;
  15   1              EA = 1;
  16   1      }
  17          
  18          //PWMÕ¼¿Õ¿ØÖÆ               ¸ßµçÆ½Õ¼µÄ¸öÊý½ÐÕ¼¿Õ±È
  19          u8 pwm_time;
  20          u8 pwm_duty;
  21          u8 pwm_flag = 1;           //pwm¿ª¹ØÐÍºÅ
  22          void PWM_Process(u8 Mode){
  23   1              if(pwm_flag == 1){
  24   2                      if(Mode == 1) pwm_duty = 20;
  25   2                      if(Mode == 2) pwm_duty = 30;
  26   2                      if(Mode == 3) pwm_duty = 70;
  27   2                      pwm_time = pwm_time%10 +1;
  28   2                      if(pwm_time < (pwm_duty/10)){
  29   3                              DeviceCtrl(0x80,~0x01);
  30   3                              P34 =1;
  31   3                      }else{
  32   3                              DeviceCtrl(0x80,0xff);
  33   3                              P34=0;
  34   3                      }
  35   2              }
  36   1              if(pwm_flag == 0){
  37   2                      pwm_time = 0;
  38   2                      pwm_duty = 0;
  39   2              }
  40   1              
  41   1      }
  42          
  43          
  44          //¼üÅÌ¶ÁÈ¡
  45          u8 key_value;
  46          u16 BTN_Time;
  47          void BTN_Process(){
  48   1              if(BTN_Time >= 10){                   //100²»ÐÐ£¿,ÊÇµÄ£¬ÓëÖ®Ç°²»Ò»Ñù£¬Ö®Ç°µÄ°´¼üÓë¹¦ÄÜÊÇÒ»Æð·ÅÔÚÕâ¸ö¼üÅÌ¼
             -ì²âÀïÃæ£¬Ö®Ç°¶ÁÈ¡µÄkey_valueÖµÊÇBTN_Read_StateµÄÖµ£¨ËæÊ±±ä»¯£©£¬¶øÕâÀïµÄÖµÐèÒªµÈÊ±¼ä¸üÐÂ²Å»á´ÓÐÂ¶ÁÈ¡BTNµÄÖµ¡£ËÙ¶È²»¿ìµÄ»
             -°key_value¿ÉÄÜÒÔÏàÍ¬µÄÖµÖ´ÐÐÁ½´Î
  49   2                      key_value = BTN_Read_State();       //ÆäÊµÎÒ¸Ð¾õÕâÑù²»ÐÐ£¬BTN¶ÁÈ¡·½·¨¶¼Ã»ÓÃÁË
  50   2                      BTN_Time=0;
  51   2              }
  52   1      }
C51 COMPILER V9.56.0.0   MAIN                                                              07/28/2024 11:33:21 PAGE 2   

  53          
  54          //Ê±¼äµ¹¼ÆÊ±
  55          u16 countdown;
  56          
  57          void CountDown_t(){
  58   1      
  59   1              if(Surplus_Work_Time==0){
  60   2                      pwm_flag = 0;                                 //PWNÍ£Ö¹ÐÅºÅ
  61   2              }
  62   1              if(Surplus_Work_Time!=0){
  63   2                      pwm_flag = 1;
  64   2                      if(countdown>=10000 ){
  65   3                      Surplus_Work_Time = Surplus_Work_Time -1;
  66   3                      countdown=0;
  67   3                      }
  68   2              }
  69   1                      
  70   1                                     
  71   1      }
  72          
  73          int i = 0;
  74          void SMG_Process(){
  75   1              if(Display ==0){
  76   2                              smg_buf[0] = 0x40;
  77   2                              smg_buf[1] = smg_code[Mode];
  78   2                              smg_buf[2] = 0x40; 
  79   2                              smg_buf[3] =smg_code[0];
  80   2                              smg_buf[4] = smg_code[Surplus_Work_Time/1000];
  81   2                              smg_buf[5] = smg_code[Surplus_Work_Time/100%10];
  82   2                              smg_buf[6] = smg_code[Surplus_Work_Time/10%10];
  83   2                              smg_buf[7] = smg_code[Surplus_Work_Time%10];
  84   2              }
  85   1              if(Display == 1){
  86   2                              smg_buf[0] = 0x40;
  87   2                              smg_buf[1] = smg_code[Mode];
  88   2                              smg_buf[2] = 0x40;
  89   2                              smg_buf[3] = 0x00;
  90   2                              smg_buf[4] = 0x00;
  91   2                              smg_buf[5] = smg_code[temperature /10%10];
  92   2                              smg_buf[6] = smg_code[temperature %10];
  93   2                              smg_buf[7] = 0x39;
  94   2              }
  95   1      
  96   1      }
  97          
  98          
  99          void main(){
 100   1              Timer2_Init();
 101   1      
 102   1              while(1){
 103   2              if(temperature_time >= 100){           //100ºÁÃë¶ÁÈ¡Ò»´ÎÎÂ¶È
 104   3                      temperature = Read_Temperature();
 105   3              }
 106   2              SMG_Process();
 107   2              BTN_Process();    //key_value
 108   2              CountDown_t(); //Ê±¼äµ¹¼ÆÊ±
 109   2              if(key_value == 4){                                               //Ä£Ê½ÇÐ»»
 110   3                      ++Mode;
 111   3                      if(Mode == 4) Mode = 1;
 112   3              }
 113   2              if(key_value == 5){
 114   3                      if(WorkTime > 120) WorkTime = 0;            //ÏÞ¶¨0 1 2 ·ÖÖÓ
C51 COMPILER V9.56.0.0   MAIN                                                              07/28/2024 11:33:21 PAGE 3   

 115   3                      WorkTime = WorkTime + 60;
 116   3                      Surplus_Work_Time = WorkTime;
 117   3              }
 118   2              if(key_value == 6){                                            //Í£Ö¹°´¼ü       µ¹¼ÆÊ±ÇåÁã´¥·¢ work_flagµ
             -ÄPWMÍ£Ö¹±êÖ¾Î»
 119   3                      Surplus_Work_Time =0;                              //»á´¥·¢ µ¹¼ÆÊ±º¯Êý µÄPWMÍ£Ö¹ÐÅºÅ
 120   3                      WorkTime = 0;
 121   3                      //pwm_flag = 0; 
 122   3              }
 123   2              if(key_value == 7){
 124   3                      Display =~ Display;
 125   3              }
 126   2              
 127   2              
 128   2              }
 129   1      }
 130          
 131          
 132          void Timer2_ISR()interrupt 12{
 133   1              SMG_Display();
 134   1              BTN_Time++;
 135   1              pwm_time++;
 136   1              PWM_Process(Mode);
 137   1              countdown++;
 138   1              temperature_time++;
 139   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    528    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

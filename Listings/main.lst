C51 COMPILER V9.56.0.0   MAIN                                                              07/26/2024 23:27:35 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil_c51v956\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Device;.\System) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "System.h"
   2          u8 Display = 0;
   3          u8 CJ_time[4] = {1,5,30,60};
   4          u8 CJ;
   5          u8 c;
   6          sbit LED1 = P0^0;
   7          u8 Mode=1;
   8          void Timer2_Init(void)          //1∫¡√Î@12.000MHz
   9          {
  10   1              AUXR |= 0x04;                   //∂® ±∆˜ ±÷”1Tƒ£ Ω
  11   1              T2L = 0x20;                             //…Ë÷√∂® ±≥ı º÷µ
  12   1              T2H = 0xD1;                             //…Ë÷√∂® ±≥ı º÷µ
  13   1              AUXR |= 0x10;                   //∂® ±∆˜2ø™ ºº∆ ±
  14   1              IE2 = 0x04;
  15   1              EA = 1;
  16   1      }
  17          
  18          
  19          
  20          //Œ¬∂»∂¡»°DS18B20
  21          u8 temp[10];
  22          u16 temp_time = 0;
  23          u8 i = 0;
  24          u16 LED1_time;
  25          bit LED1_flag=0;             //…¡À∏±Í÷æ
  26          bit LED1_switch=0;              //S6øÿ÷∆µƒø™πÿ
  27          void Temperature_D1(){
  28   1                      if(Mode == 2){
  29   2                              if(i <10 && temp_time>=CJ*100){
  30   3                              temp[i] = Read_Temperature();
  31   3                              temp_time = 0;
  32   3                              i++;
  33   3                              }
  34   2                              if(i==10){                                   //µ±i=10µƒ ±∫ÚæÕ≤ªºÏ≤‚Ã·»°¡À
  35   3                                      i = 0;
  36   3                                      Display =2;                                    //Ω¯»ÎŒ¬∂»≤…ºØœ‘ æΩÁ√Ê£¨LED1…¡À∏ 
  37   3                                      if(LED1_time>=500){
  38   4                                              LED1_flag=~LED1_flag;
  39   4                                              if(LED1_flag==0){
  40   5                                              DeviceCtrl(0x80,~0x01);
  41   5                                              }else{DeviceCtrl(0x80,0xff);}
  42   4                                              LED1_time=0;
  43   4                                                              
  44   4                                      }       
  45   3                      }
  46   2      }
  47   1      }
  48          u8 indexes = 0;
  49          u8 datatemp = 0;
  50          u16 datatemp_time;
  51          
  52          void Temperature_D2(){
  53   1              if(Mode == 3){
  54   2                      
C51 COMPILER V9.56.0.0   MAIN                                                              07/26/2024 23:27:35 PAGE 2   

  55   2                      if(datatemp_time>=1000 && indexes<10){
  56   3                      
  57   3                      datatemp = temp[indexes];
  58   3                      indexes++;
  59   3                      datatemp_time=0;
  60   3                      }
  61   2                      if(indexes == 10){
  62   3                      indexes=0;
  63   3                      Mode =4;
  64   3                      } 
  65   2              }
  66   1      
  67   1      }
  68          
  69          //º¸≈Ã∂¡»°
  70          u8 key_value;
  71          u8 key_time;
  72          u8 indexes;      //À˜“˝
  73          
  74          void KBD_Process(){
  75   1              if(key_time >= 10){
  76   2                      key_value = KBD_Read_State();
  77   2                      key_time =0;
  78   2                      if(key_value == 4&&Mode == 1){                   //∞¥º¸ S4 «–ªª 4 ∏ˆŒ¬∂»≤…ºØº‰∏Ù ±º‰£¨∑÷±Œ™ 1 √Î°¢5 √Î°
             -¢30 √Î∫Õ 60 √Î£ª
  79   3                              
  80   3                              Display=0;  
  81   3                              CJ= CJ_time[c];
  82   3                              c++;
  83   3                              if(c ==4){
  84   4                               c=0;
  85   4                              };
  86   3                      }
  87   2                      if(key_value == 5&&Mode == 1){                       //∞¥œ¬∞¥º¸ S5 £¨Ω¯»Î ±÷”œ‘ æΩÁ≤¢ø™ º≤…ºØŒ¬∂»°£
  88   3                      Display=1;                                 //Ω¯»ÎDisplay1ΩÁ√Ê≤¢º§ªÓTemperature_D1
  89   3                      Mode = 2;
  90   3                      }
  91   2                      Temperature_D1();               //≥ˆ¿¥∫ÛMode≤ª±‰2≤…ºØÕÍ Æ∏ˆ ˝æ›ø…“‘Ω¯»ÎŒ¬∂»≤…ºØœ‘ æΩÁ√ÊDisplay2
  92   2                      Temperature_D2();                               //≥ˆ¿¥∫ÛMode=4
  93   2      
  94   2                      if(key_value == 6&&Mode == 2){
  95   3                      DeviceCtrl(0x80,0xff);    //LED1Õ£÷π…¡À∏
  96   3                      Mode = 3;
  97   3                      
  98   3                      }
  99   2                      if(key_value == 7&&Mode == 4){
 100   3                              Mode = 1;
 101   3                              Display=0;
 102   3                      }
 103   2      
 104   2              }
 105   1      }
 106          
 107          // ±÷”∂¡»°
 108          u8 hour,minute,second;
 109          u16 ds1302_time;
 110          bit Smg_Tsf = 0;
 111          void DS1302_Process(){
 112   1                      second = BCDToDec(Read_Ds1302_Byte(0x81));
 113   1                      minute = BCDToDec(Read_Ds1302_Byte(0x83));
 114   1                      hour = BCDToDec(Read_Ds1302_Byte(0x85));
 115   1      }
C51 COMPILER V9.56.0.0   MAIN                                                              07/26/2024 23:27:35 PAGE 3   

 116          
 117          u16 SMG_time;
 118          void SMG_Process(){
 119   1              if(Display == 0){
 120   2                              smg_buf[0]= 0x00;
 121   2                              smg_buf[1] = 0x00;
 122   2                              smg_buf[2] = 0x00;
 123   2                              smg_buf[3] = 0x00;      
 124   2                              smg_buf[4]= 0x00;
 125   2                              smg_buf[5] = 0x40;
 126   2                              smg_buf[6] = smg_code[CJ/10];
 127   2                              smg_buf[7] = smg_code[CJ%10];
 128   2              }
 129   1              else if(Display == 1){
 130   2                              smg_buf[0]= smg_code[i/10];
 131   2                              smg_buf[1] = smg_code[i%10];
 132   2                              smg_buf[3] = smg_code[minute/10];
 133   2                              smg_buf[4]= smg_code[minute%10];
 134   2                              smg_buf[6] = smg_code[second/10];
 135   2                              smg_buf[7] = smg_code[second%10];
 136   2                              if(SMG_time>=1000){
 137   3                              Smg_Tsf  =~ Smg_Tsf ;
 138   3                              if(Smg_Tsf==0){
 139   4                              smg_buf[2] = 0x40;
 140   4                              smg_buf[5] =  0x40;
 141   4                              }else{
 142   4                              smg_buf[2] = 0x00;
 143   4                              smg_buf[5] =  0x00;}
 144   3                              SMG_time=0;
 145   3                              }
 146   2              }
 147   1              else if(Display == 2){
 148   2                              smg_buf[0]= 0x40;
 149   2                              smg_buf[1] = smg_code[indexes/10];
 150   2                              smg_buf[2] = smg_code[indexes%10];
 151   2                              smg_buf[3] = 0x00;
 152   2                              smg_buf[4]= 0x00;
 153   2                              smg_buf[5] = 0x40;
 154   2                              smg_buf[6] = smg_code[datatemp/10];
 155   2                              smg_buf[7] = smg_code[datatemp%10];
 156   2              }
 157   1      
 158   1      }
 159          
 160          
 161          void main(){
 162   1              Timer2_Init();
 163   1               Clock_Set(23,59,50);
 164   1              while(1){
 165   2                      SMG_Process();
 166   2                      KBD_Process();
 167   2                      DS1302_Process();
 168   2                      
 169   2              }
 170   1      }
 171          
 172          void Timer2_ISR()interrupt 12{
 173   1              SMG_Display();
 174   1              key_time++;
 175   1              temp_time++;
 176   1              ds1302_time++;
 177   1              LED1_time++;
C51 COMPILER V9.56.0.0   MAIN                                                              07/26/2024 23:27:35 PAGE 4   

 178   1              SMG_time++;
 179   1              datatemp_time++;
 180   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    714    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
